AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Sporting Events Service - Amazon API Gateway to AWS Lambda to Amazon DynamoDB to store sporting events from events producers
Globals:

  Function:
    Runtime: python3.9
    Tracing: Active
    Layers:
      - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:32
    Environment:
      Variables:
        POWERTOOLS_SERVICE_NAME: sportingevents

Parameters:
  LiveMarketStackName:
    Description: >-
      Name of an active CloudFormation stack that contains the networking  
      resources, such as the subnet and security group, that will be used in  
      this stack.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: LiveMarketStackName

Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function that inserts data into DynamoDB table'
    Properties:
      FunctionName:
      Handler: app.lambda_handler
      CodeUri: ../lambda/sportingevents/receiver/
      Description: Lambda for receiving sporting events
      Runtime: python3.9
      Timeout: 10
      MemorySize: 256
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: 'LiveMarketDataStore'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: POST
      Environment:
        Variables:
          DB_TABLE:
            Fn::ImportValue: 'LiveMarketDataStore'

Outputs:
  EndpointUrl:
    Description: 'HTTP REST endpoint URL'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'