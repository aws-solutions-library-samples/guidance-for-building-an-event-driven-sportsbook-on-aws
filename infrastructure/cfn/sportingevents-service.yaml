AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Sporting Events Service - Amazon API Gateway to AWS Lambda to process and store sporting events from events producers
Globals:

  Function:
    Runtime: python3.12
    Tracing: Active
    Layers:
      - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV3-python312-x86_64:10
    Environment:
      Variables:
        POWERTOOLS_SERVICE_NAME: sportingevents

Parameters:
  EventBus:
    Type: String
  
  LambdaEnvKmsKeyArn:
    Type: String
    Default: ""
    Description: ARN of the KMS key for Lambda environment variable encryption

  EnableEnvVarEncryption:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: Enable enhanced encryption for Lambda environment variables

Conditions:
  UseKmsKey: !And [!Equals [!Ref EnableEnvVarEncryption, "true"], !Not [!Equals [!Ref LambdaEnvKmsKeyArn, ""]]]

Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function that receives data from event producers and processes them'
    Properties:
      FunctionName:
      Handler: app.lambda_handler
      CodeUri: ../lambda/sportingevents/receiver/
      Description: Lambda for receiving sporting events
      Runtime: python3.12
      Timeout: 10
      MemorySize: 256
      KmsKeyArn: !If [UseKmsKey, !Ref LambdaEnvKmsKeyArn, !Ref AWS::NoValue]
      Policies:
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref EventBus
        - Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:DescribeKey
              Resource: !If [UseKmsKey, !Ref LambdaEnvKmsKeyArn, !Ref AWS::NoValue]
      DeadLetterQueue:
        Type: SQS  # Can be SQS or SNS
        TargetArn: !GetAtt DLQ.Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /receiver
            Method: POST
      Environment:
        Variables:
          EVENT_BUS: !Ref EventBus

Outputs:
  EndpointUrl:
    Description: 'HTTP REST endpoint URL'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/receiver'