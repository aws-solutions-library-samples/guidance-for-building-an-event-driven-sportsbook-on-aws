AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Globals:

  Function:
    Runtime: python3.12
    Tracing: Active
    Layers:
      - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV3-python312-x86_64:10
    Environment:
      Variables:
        POWERTOOLS_SERVICE_NAME: wallet

Parameters:

  AppSyncApiId:
    Type: String

  AppSyncEndpointArn:
    Type: String

  EventBus:
    Type: String
  
  LambdaEnvKmsKeyArn:
    Type: String
    Default: ""
    Description: ARN of the KMS key for Lambda environment variable encryption

  EnableEnvVarEncryption:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: Enable enhanced encryption for Lambda environment variables

Conditions:
  UseKmsKey: !And [!Equals [!Ref EnableEnvVarEncryption, "true"], !Not [!Equals [!Ref LambdaEnvKmsKeyArn, ""]]]

Resources:

  # amazonq-ignore-next-line
  WalletDataStore:
    Type: AWS::DynamoDB::Table
    Properties:
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: ExpirationTime
        Enabled: true

  EventBridgeMutationsRole:
    Type: AWS::IAM::Role
    Properties:
      Description: A role for eventbridge to call appsync mutations for the wallet service
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: appsync
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: appsync:GraphQL
                Resource:
                  - !Sub arn:aws:appsync:${AWS::Region}:${AWS::AccountId}:apis/${AppSyncApiId}/types/Mutation/fields/createWallet

  UserSignedUpRule:
    Type: AWS::Events::Rule
    Properties:
      Description: A rule for initiating wallet creation on signup
      EventBusName: !Ref EventBus
      EventPattern:
        source:
          - com.auth
        detail-type:
          - UserSignedUp
      Targets:
        -
          Arn: !Ref AppSyncEndpointArn
          Id: AppSyncCreateWalletOnSignup
          RoleArn: !GetAtt EventBridgeMutationsRole.Arn
          AppSyncParameters:
            GraphQLOperation: |
              mutation CreateWallet ($input: CreateWalletInput) {
                createWallet(input: $input) {
                  ... on Wallet {
                    balance
                    userId
                  }
                }
              }
          InputTransformer:
            InputPathsMap:
              userId: "$.detail.userId"
            InputTemplate: "{ \"input\": { \"userId\": \"<userId>\" } }"

  WalletResolverFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      CodeUri: ../lambda/wallet/resolvers/
      Description: Lambda for Appsync resolvers
      Timeout: 10
      MemorySize: 256
      KmsKeyArn: !If
        - UseKmsKey
        - !Ref LambdaEnvKmsKeyArn
        - !Ref AWS::NoValue
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref WalletDataStore
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref EventBus
        - Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:DescribeKey
              Resource: !If
                - UseKmsKey
                - !Ref LambdaEnvKmsKeyArn
                - !Ref AWS::NoValue
      Environment:
        Variables:
          DB_TABLE: !Ref WalletDataStore
          ACCOUNT_ID: !Ref AWS::AccountId
          APPSYNC_API_ID: !Ref AppSyncApiId
          EVENT_BUS: !Ref EventBus

  WalletAppSyncRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appsync.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-AppSyncRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !GetAtt WalletResolverFunction.Arn

  WalletLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !Ref AppSyncApiId
      Name: Wallet_Lambda_Source
      Description: Wallet Lambda AppSync Data Source
      Type: AWS_LAMBDA
      ServiceRoleArn: !GetAtt WalletAppSyncRole.Arn
      LambdaConfig:
        LambdaFunctionArn: !GetAtt WalletResolverFunction.Arn

  GetWalletResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref AppSyncApiId
      TypeName: Query
      FieldName: getWallet
      DataSourceName: !GetAtt WalletLambdaDataSource.Name

  GetWalletByIdResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref AppSyncApiId
      TypeName: Query
      FieldName: getWalletByUserId
      DataSourceName: !GetAtt WalletLambdaDataSource.Name

  CreateWalletResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref AppSyncApiId
      TypeName: Mutation
      FieldName: createWallet
      DataSourceName: !GetAtt WalletLambdaDataSource.Name

  WithdrawFundsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref AppSyncApiId
      TypeName: Mutation
      FieldName: withdrawFunds
      DataSourceName: !GetAtt WalletLambdaDataSource.Name

  DepositFundsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref AppSyncApiId
      TypeName: Mutation
      FieldName: depositFunds
      DataSourceName: !GetAtt WalletLambdaDataSource.Name

  DeductFundsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref AppSyncApiId
      TypeName: Mutation
      FieldName: deductFunds
      DataSourceName: !GetAtt WalletLambdaDataSource.Name
